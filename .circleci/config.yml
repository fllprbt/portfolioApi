# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/php:7.2-node-browsers

version: 2
jobs:
  setup:
    <<: *defaults

    steps:
      - checkout

      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
          # "composer.json" can be used if "composer.json"
          # is not committed to the repository.
          - v1-dependencies-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: yarn
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      - persist_to_workspace:
          root: ./
          paths:
            - ./

      # prepare the database
      - run: touch storage/testing.sqlite
      - run: php artisan migrate --env=testing --database=sqlite_testing --force

  test BE:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ./

      - run:
          command: |
            mkdir -p ~/phpunit
            ./vendor/bin/phpunit --log-junit ~/phpunit/junit.xml tests
          when: always

      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit

  test FE:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ./

      # Setup steps omitted
      - run:
          command: yarn ts
          background: true

      - run:
          command: yarn prettier
          background: true

      - run:
          command: yarn tslint
          background: true

      - run:
          name: "JavaScript Tests Suite"
          # yarn here makes sure we are using the local jest binary
          command: yarn jest --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/junit
            JEST_JUNIT_OUTPUT_NAME: js-test-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage

workflows:
    version: 2
    test:
        jobs:
        - setup
        - test BE:
            requires:
            - setup
        - test FE:
            requires:
            - setup
                    